Question Link:
https://www.hackerrank.com/challenges/matrix-tracing/problem

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound
#define ub upper_bound
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;
int fac[2000000 + 1];
ll po(ll a, ll b, ll M) {ll res = 1;a = a % M;while (b) {if (b % 2)res = (res * a) % M;b /= 2;a = (a * a) % M;}return res;}
ll modInverse(ll n, ll M){return po(n, M - 2, M);}
ll nCrModPFermat(ll n, ll r, ll M){if (!r)return 1;return (fac[n] * modInverse(fac[r], M) % M *modInverse(fac[n - r], M) % M) %M;}
ll logk(ll a, ll b){return log(a) / log(b);}
bool isPrime(ll N){for (ll i = 2; i * i <=N; ++i){if (N % i == 0)return false;}return true;}
ll gcd(ll a, ll b){if(b==0) return a;return gcd(b, a%b);}
bool comp(const pair<int,int> &a,const pair<int,int> &b){
    if(a.first==b.first)
        return a.second<b.second;
    else
        return a.first>b.first;
}
bool sortin(const pair<int,int> &a,const pair<int,int> &b){
    if(a.second==b.second)
        return a.second<b.second;
    else
        return a.first<b.first;
}
void pre(){
    fac[0] = 1;
    ll i;
    f(i, 1, 2000000 + 1){
        fac[i] = (fac[i - 1] *1LL* i) % mod;
    }
}
int main() {
    NeedForSpeed;
    pre();
    T_ {
        ll n, m;
        cin >> n >> m;
        if (n == 1 || m == 1) {
            cout << "1\n";
            continue;
        }
        ll x = n + m - 3;
        ll y = min(n, m) - 2;
        cout << (nCrModPFermat(x, y, mod) + nCrModPFermat(x, y + 1, mod)) % mod << "\n";
    }
    return 0;
}
