Question Link:
https://codeforces.com/problemset/problem/1423/K

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

bool prime[1000001];
void SieveOfEratosthenes(ll n) {
    memset(prime, true, sizeof(prime));
    for (ll p = 2; p * p <= n; p++) {
        if (prime[p] == true) {
            for (ll i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }
}

vector<ll>v;
int pref[1000001];
void pre() {
    SieveOfEratosthenes(1000000);
    pref[1] = 0;
    for (ll i = 2; i <= 1000000; i++) {
        if (prime[i]) {
            v.pb(i);
        }
        pref[i] = pref[i - 1] + prime[i];
    }
}
int main() {
    NeedForSpeed;
    pre();
    T_ {
        ll n;
        cin >> n;
        ll x = pref[n];
        ll l = 0, r = x - 1;
        ll val = sqrt(n);
        ll ans = -1;
        while (l <= r) {
            ll mid = (l + r) / 2;
            if (v[mid] <= val) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        cout << x - ans << "\n";
    }
    return 0;
}