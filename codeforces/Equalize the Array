Question Link:
https://codeforces.com/contest/1490/problem/F

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
    T_ {
        ll n, i;
        cin >> n;
        map<ll, ll> m1;
        for (i = 0; i < n; i++) {
            ll x;
            cin >> x;
            m1[x]++;
        }
        vector<ll> v;
        for (auto it:m1) {
            v.pb(it.ss);
        }
        sort(all(v));
        ll m = v.size();
        ll pre[m + 1], post[m + 1];;
        pre[0] = 0;
        ll temp = v[0];
        for (i = 1; i < m; i++) {
            pre[i] = pre[i - 1];
            if (v[i] != v[i - 1]) {
                pre[i] += temp;
                temp=0;
            }
            temp += v[i];
        }
        post[m] = 0;
        for (i = m - 1; i >= 0; i--) {
            post[i] = post[i + 1] + v[i];
        }
        ll mn = n;
        for (i = 0; i < v.size(); i++) {
            mn = min(mn, pre[i] + (post[i] - v[i] * (m - i)));
        }
        cout << mn << "\n";
    }
    return 0;
}
