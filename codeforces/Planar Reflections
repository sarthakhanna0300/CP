Question Link:
https://codeforces.com/contest/1498/problem/C

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
    T_ {
        ll n, k, i;
        cin >> n >> k;
        n--;
        int dp[k + 1][n + 1];
        memset(dp, 0, sizeof(dp));
        ll ans = 0;
        if (k == 1) {
            cout << "1\n";
            continue;
        }
        if (n == 0) {
            cout << 2 << "\n";
            continue;
        }
        for (i = 0; i <= n; i++) {
            dp[1][i] = 1;
        }
        for (i = 2; i <= k; i++) {
            if (i % 2) {
                dp[i][1] = dp[i - 1][1];
                for (ll j = 2; j <= n; j++) {
                    dp[i][j] = (dp[i][j - 1] + dp[i - 1][j]) % mod;
                }
                ans += dp[i][n];
            } else {
                dp[i][n] = dp[i - 1][n];
                for (ll j = n - 1; j >= 1; j--) {
                    dp[i][j] = (dp[i][j + 1] + dp[i - 1][j]) % mod;
                }
                ans += dp[i][1];
            }
            ans %= mod;
        }
        cout << ans + 2 << "\n";
    }
    return 0;
}


