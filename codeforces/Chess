Question Link:
https://codeforces.com/contest/38/problem/B

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;
//const int INF=0x3f3f3f3f;
ll po(ll a, ll b, ll M) {ll res = 1;a = a % M;while (b) {if (b % 2)res = (res * a) % M;b /= 2;a = (a * a) % M;}return res;}
ll pw(ll x, ll y){if (y == 0)return 1;else if (y % 2 == 0)return po(x, y / 2,mod)%mod * po(x, y / 2,mod)%mod;else return x * po(x, y / 2,mod) %mod* po(x, y / 2,mod)%mod;}
ll modInverse(ll n, ll M){return po(n, M - 2, M);}
ll nCrModPFermat(ll n, ll r, ll M){if (!r)return 1;ll fac[n + 1];fac[0] = 1;ll i;f(i, 1, n + 1){fac[i] = fac[i - 1] * i % M;}return (fac[n] * modInverse(fac[r], M) % M *modInverse(fac[n - r], M) % M) %M;}
ll logk(ll a, ll b){return log(a) / log(b);}
bool isPrime(ll N){for (ll i = 2; i * i <=N; ++i){if (N % i == 0)return false;}return true;}
ll gcd(ll a, ll b){if(b==0) return a;return gcd(b, a%b);}
//bool comp(const pair<int,pair<int,int>> &a,const pair<int,pair<int,int>> &b){
//    if(a.ss.ff==b.ss.ff)
//        return a.ss.ss>b.ss.ss;
//    return a.ss.ff<b.ss.ss;
//}
bool sortin(const pair<int,int> &a,const pair<int,int> &b){
    if(a.second==b.second)
        return a.first<b.first;
    else
        return a.second<b.second;
}
//vector<bool>prime(100000001, true);
bool prime[1000001];
void SieveOfEratosthenes(ll n) {
    memset(prime, true, sizeof(prime));
    for (ll p = 2; p * p <= n; p++) {
        if (prime[p] == true) {
            for (ll i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }
}


//ll inf=(1LL << 60);
//const int dx[4] = {-1, 0, 0, 1};
//const int dy[4] = {0, -1, 1, 0};
//
//char a[1000 + 1][1000 + 1];
//ll n, m;
//bool isValid(ll x,ll y){
//    if(x<0 || y<0 || y>m-1 || x>n-1){
//        return false;
//    }
//    if(a[x][y]=='#')
//        return false;
//    return true;
//}

//ll c[100000+5];
//vector<ll>arr[100005];
//vector<ll>ans;
//int vis[100005];

//vector<vector<pair<ll,ll>>>v(1000001);
//int dist[1001][1001];
//void bfs(ll i,ll j) {
//    queue<pair<ll, ll>> q;
//    q.push({i, j});
//    dist[i][j] = 0;
//    a[i][j]='#';
//    v[dist[i][j]].pb({i,j});
//    while (!q.empty()) {
//        ll x = q.front().first;
//        ll y = q.front().second;
//        q.pop();
//        for (ll k = 0; k < 4; k++) {
//            ll x1 = x + dx[k], y1 = y + dy[k];
//            if (isValid(x1, y1)) {
//                q.push({x1, y1});
//                dist[x1][y1] = dist[x][y] + 1;
//                a[x1][y1] = '#';
//                v[dist[x1][y1]].pb({x1,y1});
//            }
//        }
//    }
//}
//vector<vector<ll>> dp(200005, vector<ll> (3, -1));
int main() {
    NeedForSpeed;
//    T_ {
    char c1, c2;
    int colr, colk;
    cin >> c1 >> colr >> c2 >> colk;
    int rowr = c1 - 'a';
    int rowk = c2 - 'a';
    colr--;
    colk--;
    int ans = 0;
    for (int i = 0; i < 8; i++)
        for (int j = 0; j < 8; j++) {
            if (i == rowr || j == colr)
                continue;
            if (i == rowk && j == colk)
                continue;
            if (abs(i - rowk) == 2 && abs(j - colk) == 1 ||
                abs(i - rowk) == 1 && abs(j - colk) == 2)
                continue;
            if (abs(i - rowr) == 2 && abs(j - colr) == 1 ||
                abs(i - rowr) == 1 && abs(j - colr) == 2)
                continue;
            ans++;
        }
    cout << ans;
//    }
    return 0;
}