Question Link:
https://codeforces.com/contest/1218/problem/F

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
//    T_ {
    ll n, k, i;
    cin >> n >> k;
    ll a[n + 1];
    for (i = 1; i <= n; i++) {
        cin >> a[i];
    }
    ll c;
    cin >> c;
    ll cost[n + 1];
    for (i = 1; i <= n; i++) {
        cin >> cost[i];
    }
    ll f = 0;
    ll req[100005] = {0};
    for (i = n; i >= 1; i--) {
        ll temp = i * c + k;
        if (temp < a[i]) {
            f = 1;
            break;
        }
        if (a[i] > k) {
            temp = a[i] - k;
            req[i] = temp / c;
            if (temp % c != 0) {
                req[i]++;
            }
        } else {
            req[i] = 0;
        }
    }
    if (f) {
        cout << "-1\n";
        exit(0);
    }
    ll mx = -1, ind = 1;
    for (i = 1; i <= n; i++) {
        if (req[i] > mx) {
            mx = req[i];
            ind = i;
        }
    }
    priority_queue<int, vector<int>, greater<int> > q;
    ll ans = 0;
    ll r = 0;
    for (i = 1; i <= ind; i++) {
        q.push(cost[i]);
        if (r < req[i]) {
            while (r != req[i]) {
                ans += q.top();
                q.pop();
                r++;
            }
        }
    }
    cout << ans << "\n";
//    }
    return 0;
}

