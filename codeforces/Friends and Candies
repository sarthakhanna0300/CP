Question Link:
https://codeforces.com/contest/1538/problem/B

Code:
/* You miss 100 percent of the shots you don't take */
#include <bits/stdc++.h>
using namespace std;
#define debug(x) cout<<"["<<#x<<": "<<x<<"]"<<endl
#define debug2(x, y) cout<<"["<<#x<<": "<<x<<", "<<#y<<": "<<y<<"]"<<endl
#define int long long
#define ll long long
#define ld long double
const int MOD = 1000000007;
const ld PI = 3.14159265358979;
const int INF = 1000000000000000000;
bool isPrime(int n){if (n == 1) return false;if (n == 2) return true;if (n == 3) return true;for(int i =2;i<=sqrt(n);i++) if (n % i == 0) {return false;}return true;}
bool sortBySec(const pair<int,int> &a,const pair<int,int> &b) {return (a.second < b.second);}
int powerMod(int a, int b, int M) {int res = 1;a = a % M;while (b) {if (b % 2){res = (res * a) % M;}b /= 2;a = (a * a) % M;}return res;}
int fact(int n, int M){int res = 1;for(int i =1;i<=n;i++) {res = ((res%M)*(i%M))%M;}return res;}
int modInverse(int n, int M){return powerMod(n, M - 2, M);}
int nCrModPFermat(int n, int r, int M){if (!r){return 1;}int fac[n + 1];fac[0] = 1;for(int i =1;i<=n;i++){fac[i] = fac[i - 1] * i % M;}return (fac[n] * modInverse(fac[r], M) % M * modInverse(fac[n - r], M) % M) %M;}
ld logABaseB(int a, int b){return (ld)((ld)log(a) / (ld)log(b));}

int32_t main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        int sum = 0;
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
            sum += arr[i];
        }
        if (sum % n != 0)
            cout << -1 << endl;
        else {
            int k = sum / n;
            int ans = 0;
            for (int i = 0; i < n; i++) {
                if (arr[i] > k)
                    ans++;
            }
            cout << ans << endl;
        }
    }
    return 0;
}


