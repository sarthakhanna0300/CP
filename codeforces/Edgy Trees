Question Link:
https://codeforces.com/contest/1139/problem/C

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;
//const int INF=0x3f3f3f3f;
ll po(ll a, ll b, ll M) {ll res = 1;a = a % M;while (b) {if (b % 2)res = (res * a) % M;b /= 2;a = (a * a) % M;}return res;}

vector<int>arr[100005];
map<pair<int,int>,int>m;
int vis[100005];
ll c=0;
void dfs(ll node) {
    vis[node] = 1;
    for (auto child:arr[node]) {
        if (!vis[child] && m[{node, child}]==1) {
            c++;
            dfs(child);
        }
    }
}
int main() {
    NeedForSpeed;
//    T_ {
    ll n, i, k;
    cin >> n >> k;
    for (i = 0; i < n - 1; i++) {
        ll x, y, cl;
        cin >> x >> y >> cl;
        arr[x].pb(y);
        arr[y].pb(x);
        m[{x, y}] = cl + 1;
        m[{y, x}] = cl + 1;
    }
    vector<ll> v;
    ll sum = 0;
    for (i = 1; i <= n; i++) {
        if (!vis[i]) {
            c = 0;
            dfs(i);
//            cout << c << " ";
            if (c != 0) {
                v.pb(c + 1);
                sum += c + 1;
            }
        }
    }
    ll ans = po(n, k, mod);
    ans -= (n - sum);
    if (ans < 0) {
        ans = (ans + mod) % mod;
    }
    for (i = 0; i < v.size(); i++) {
        ans -= (po(v[i], k, mod));
        if (ans < 0) {
            ans = (ans + mod) % mod;
        }
    }
    cout << ans;
//    }
    return 0;
}
 
