Question Link:
https://codeforces.com/problemset/problem/1519/D

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
//    T_ {
    ll n, i;
    cin >> n;
    ll a[n + 1], b[n + 1];
    for (i = 0; i < n; i++) {
        cin >> a[i];
    }
    for (i = 0; i < n; i++) {
        cin >> b[i];
    }
    ll ans = 0;
    vector<ll> pre(n + 1, 0);
    for (i = 0; i < n; ++i) {
        pre[i + 1] = pre[i] + a[i] * b[i];
    }
    ans = pre[n];
    ll total = ans;
    for (i = 0; i < n; i++) {
        ll curr = a[i] * b[i];
        ll l, r;
        for (l = i - 1, r = i + 1; l >= 0 && r < n; l--, r++) {
            curr += a[l] * b[r];
            curr += a[r] * b[l];
            ans = max(ans, curr + pre[l] + (pre[n] - pre[r + 1]));
        }
        curr = 0;
        for (l = i, r = i + 1; l >= 0 && r < n; --l, ++r) {
            curr += a[l] * b[r];
            curr += a[r] * b[l];
            ans = max(ans, curr + pre[l] + (pre[n] - pre[r + 1]));
        }
    }
    cout << ans;
//    }
    return 0;
}
