Question Link:
https://codeforces.com/contest/1539/problem/C

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
//    T_ {
    ll n, k, x;
    cin >> n >> k >> x;
    set <ll> s;
    for (ll i = 0; i < n; i++) {
        ll temp;
        cin >> temp;
        s.insert(temp);
    }
    vector <ll> v;
    for (auto it:s) {
        v.pb(it);
    }
    ll l = v[0], c = 0;
    map <ll, ll> m;
    for (ll i = 0; i < v.size(); i++) {
        if (v[i] - l > x) {
            m[((v[i] - l + x - 1) / x) - 1]++;
            c++;
        }
        l = v[i];
    }
    c++;
    for (auto it:m) {
        if (it.ss * it.ff > k) {
            ll temp = k / it.ff;
            c -= temp;
            break;
        } else {
            c -= it.ss;
            k -= it.ss * it.ff;
        }
    }
    cout << c;
//    }
    return 0;
}
 
