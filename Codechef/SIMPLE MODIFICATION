Question Link:
https://www.codechef.com/problems/COW3E

Code:
#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define pi 3.14159265358979
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
//#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
//#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define maxv(a) *max_element(all(a))
#define sumv(a) accumulate(all(a),0)
#define lb lower_bound //lower_bound returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘val’.
#define ub upper_bound //upper_bound returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘val’.
#define vi vector<ll>
#define iii = tuple<int, int, ll>
#define vvi = vector<vi>
#define viii = vector<iii>
#define setpre(a) cout << setprecision(a) << fixed

typedef long long ll ; typedef long double ld;
using namespace std;

int main() {
    NeedForSpeed;
//    T_ {
    ll n, m, u, q, i, j;
    cin >> n >> m >> u >> q;
    ll a[n + 1][m + 1];
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= m; j++) {
            cin >> a[i][j];
        }
    }
    ll pre[n + 1][m + 1];
    memset(pre, 0, sizeof(pre));
    ll upd[n + 1][m + 1];
    memset(upd, 0, sizeof(upd));
    while (u--) {
        ll k, c1, c2, r1, r2;
        cin >> k >> r1 >> c1 >> r2 >> c2;
        r1++, c1++, r2++, c2++;
        for (i = r1; i <= r2; i++) {
            upd[i][c1] += k;
            upd[i][c2 + 1] -= k;
        }
    }
    ll x = 0;
    for (i = 1; i <= n; i++) {
        x = 0;
        for (j = 1; j <= m; j++) {
            x += upd[i][j];
            pre[i][j] += pre[i][j - 1] + a[i][j] + x;
        }
    }
    for (j = 1; j <= m; j++) {
        for (i = 1; i <= n; i++) {
            pre[i][j] += pre[i - 1][j];
        }
    }
    while (q--) {
        ll k, c1, c2, r1, r2;
        cin >> r1 >> c1 >> r2 >> c2;
        r1++, c1++, r2++, c2++;
        cout << pre[r2][c2] - pre[r2][c1 - 1] - pre[r1 - 1][c2] + pre[r1 - 1][c1 - 1] << "\n";
    }
//    }
    return 0;
}

